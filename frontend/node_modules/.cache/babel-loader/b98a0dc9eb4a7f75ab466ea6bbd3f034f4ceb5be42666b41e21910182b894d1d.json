{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\agro\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  requireAdmin = false\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    isLoading\n  } = useAuth();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if admin access is required\n  if (requireAdmin && !(user !== null && user !== void 0 && user.is_admin)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated and has required permissions\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"r/38E3umCJQz9nJgL/a0pLRGLAM=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","requireAdmin","_s","isAuthenticated","user","isLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","is_admin","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\ninterface ProtectedRouteProps {\n  requireAdmin?: boolean;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ requireAdmin = false }) => {\n  const { isAuthenticated, user, isLoading } = useAuth();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Check if admin access is required\n  if (requireAdmin && !user?.is_admin) {\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  // User is authenticated and has required permissions\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMjD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,YAAY,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAEtD;EACA,IAAIQ,SAAS,EAAE;IACb,oBACEN,OAAA;MAAKO,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCR,OAAA;QAAKO,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCZ,OAAA;QAAAQ,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEV;;EAEA;EACA,IAAI,CAACR,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIV,YAAY,IAAI,EAACG,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEU,QAAQ,GAAE;IACnC,oBAAOf,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;;EAEA;EACA,oBAAOZ,OAAA,CAACH,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACT,EAAA,CAzBIF,cAA6C;EAAA,QACJH,OAAO;AAAA;AAAAkB,EAAA,GADhDf,cAA6C;AA2BnD,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}