{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\agro\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState(true);\n  const login = newToken => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8000/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n        // Token might be invalid or expired\n        logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUser();\n  }, [token]);\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!token,\n    isLoading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"Ezm03IKmqt4OOZSX4/9a6guLbc0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","login","newToken","setItem","logout","removeItem","fetchUser","response","fetch","headers","ok","Error","userData","json","error","console","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\ninterface User {\n  username: string;\n  email?: string;\n  full_name?: string;\n  is_admin?: boolean;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const login = (newToken: string) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:8000/auth/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n        // Token might be invalid or expired\n        logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [token]);\n\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!token,\n    isLoading,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAMzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgBc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAChF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAU,IAAI,CAAC;EAEzD,MAAMkB,KAAK,GAAIC,QAAgB,IAAK;IAClCL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCN,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCT,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACX,KAAK,EAAE;QACVK,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MAEA,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUd,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAI,CAACY,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QAEA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACtCnB,OAAO,CAACkB,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;QACAV,MAAM,CAAC,CAAC;MACV,CAAC,SAAS;QACRJ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEX,MAAMqB,KAAK,GAAG;IACZvB,IAAI;IACJE,KAAK;IACLsB,eAAe,EAAE,CAAC,CAACtB,KAAK;IACxBI,SAAS;IACTE,KAAK;IACLG;EACF,CAAC;EAED,oBAAOjB,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAAEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC9B,EAAA,CA1DWF,YAAyC;AAAAiC,EAAA,GAAzCjC,YAAyC;AA4DtD,OAAO,MAAMkC,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAG1C,UAAU,CAACI,WAAW,CAAC;EACvC,IAAIsC,OAAO,KAAKrC,SAAS,EAAE;IACzB,MAAM,IAAIsB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOe,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}