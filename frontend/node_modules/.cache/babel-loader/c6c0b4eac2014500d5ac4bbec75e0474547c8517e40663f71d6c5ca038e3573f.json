{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\agro\\\\frontend\\\\src\\\\components\\\\DownloadPanel.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadPanel = ({\n  selectedArea,\n  vectorData,\n  rasterData\n}) => {\n  if (!selectedArea) return null;\n  const handleDownload = format => {\n    // In a real app, this would call the backend API to generate and download the file\n    console.log(`Downloading data in ${format} format`);\n    alert(`In a real app, this would download the data in ${format} format`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"download-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Download Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => handleDownload('CSV'),\n        children: \"CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => handleDownload('GeoJSON'),\n        children: \"GeoJSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => handleDownload('GeoTIFF'),\n        children: \"GeoTIFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => handleDownload('PDF'),\n        children: \"PDF Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = DownloadPanel;\nexport default DownloadPanel;\nvar _c;\n$RefreshReg$(_c, \"DownloadPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DownloadPanel","selectedArea","vectorData","rasterData","handleDownload","format","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/components/DownloadPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { SelectedArea } from '../App';\n\ninterface DownloadPanelProps {\n  selectedArea: SelectedArea | null;\n  vectorData: any;\n  rasterData: any;\n}\n\nconst DownloadPanel: React.FC<DownloadPanelProps> = ({ selectedArea, vectorData, rasterData }) => {\n  if (!selectedArea) return null;\n  \n  const handleDownload = (format: string) => {\n    // In a real app, this would call the backend API to generate and download the file\n    console.log(`Downloading data in ${format} format`);\n    alert(`In a real app, this would download the data in ${format} format`);\n  };\n  \n  return (\n    <div className=\"download-panel\">\n      <h3>Download Data</h3>\n      <div className=\"download-buttons\">\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('CSV')}\n        >\n          CSV\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('GeoJSON')}\n        >\n          GeoJSON\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('GeoTIFF')}\n        >\n          GeoTIFF\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('PDF')}\n        >\n          PDF Report\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DownloadPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAChG,IAAI,CAACF,YAAY,EAAE,OAAO,IAAI;EAE9B,MAAMG,cAAc,GAAIC,MAAc,IAAK;IACzC;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,MAAM,SAAS,CAAC;IACnDG,KAAK,CAAC,kDAAkDH,MAAM,SAAS,CAAC;EAC1E,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BX,OAAA;QACEU,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAAC,KAAK,CAAE;QAAAM,QAAA,EACtC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEU,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAAC,SAAS,CAAE;QAAAM,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEU,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAAC,SAAS,CAAE;QAAAM,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEU,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAAC,KAAK,CAAE;QAAAM,QAAA,EACtC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAxCIhB,aAA2C;AA0CjD,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}