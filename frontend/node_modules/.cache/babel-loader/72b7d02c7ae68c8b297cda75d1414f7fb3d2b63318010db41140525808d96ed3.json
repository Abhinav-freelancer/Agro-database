{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\agro\\\\frontend\\\\src\\\\components\\\\ChartPanel.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst ChartPanel = ({\n  vectorData,\n  rasterData\n}) => {\n  // Mock data for NDVI time series\n  const ndviData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'NDVI Index',\n      data: [0.2, 0.25, 0.3, 0.4, 0.5, 0.65, 0.7, 0.75, 0.6, 0.5, 0.4, 0.3],\n      borderColor: 'rgb(75, 192, 75)',\n      backgroundColor: 'rgba(75, 192, 75, 0.5)'\n    }]\n  };\n\n  // Mock data for rainfall trends\n  const rainfallData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Rainfall (mm)',\n      data: [20, 30, 45, 60, 120, 250, 300, 280, 150, 70, 40, 25],\n      backgroundColor: 'rgba(54, 162, 235, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"NDVI Vegetation Index (Annual)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: ndviData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: false\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Monthly Rainfall Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: rainfallData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: false\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartPanel;\nexport default ChartPanel;\nvar _c;\n$RefreshReg$(_c, \"ChartPanel\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Line","Bar","jsxDEV","_jsxDEV","register","ChartPanel","vectorData","rasterData","ndviData","labels","datasets","label","data","borderColor","backgroundColor","rainfallData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","title","display","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/components/ChartPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\n\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\ninterface ChartPanelProps {\n  vectorData: any;\n  rasterData: any;\n}\n\nconst ChartPanel: React.FC<ChartPanelProps> = ({ vectorData, rasterData }) => {\n  // Mock data for NDVI time series\n  const ndviData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'NDVI Index',\n        data: [0.2, 0.25, 0.3, 0.4, 0.5, 0.65, 0.7, 0.75, 0.6, 0.5, 0.4, 0.3],\n        borderColor: 'rgb(75, 192, 75)',\n        backgroundColor: 'rgba(75, 192, 75, 0.5)',\n      },\n    ],\n  };\n\n  // Mock data for rainfall trends\n  const rainfallData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Rainfall (mm)',\n        data: [20, 30, 45, 60, 120, 250, 300, 280, 150, 70, 40, 25],\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"chart-panel\">\n      <h3>Data Visualization</h3>\n      \n      {/* NDVI Time Series Chart */}\n      <div className=\"chart-container\">\n        <h4>NDVI Vegetation Index (Annual)</h4>\n        <Line \n          data={ndviData}\n          options={{\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top' as const,\n              },\n              title: {\n                display: false,\n              },\n            },\n          }}\n        />\n      </div>\n      \n      {/* Rainfall Chart */}\n      <div className=\"chart-container\">\n        <h4>Monthly Rainfall Distribution</h4>\n        <Bar\n          data={rainfallData}\n          options={{\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top' as const,\n              },\n              title: {\n                display: false,\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChartPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}