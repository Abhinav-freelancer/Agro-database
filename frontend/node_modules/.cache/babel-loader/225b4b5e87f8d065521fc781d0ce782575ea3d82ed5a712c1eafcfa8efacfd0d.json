{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\agro\\\\frontend\\\\src\\\\components\\\\MapComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup, Polygon, GeoJSON } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  center,\n  zoom,\n  selectedArea,\n  layerVisibility,\n  vectorData,\n  rasterData,\n  onAreaSelection\n}) => {\n  _s();\n  const featureGroupRef = useRef(null);\n\n  // Handle polygon creation\n  const handleCreated = e => {\n    const {\n      layerType,\n      layer\n    } = e;\n    if (layerType === 'polygon') {\n      const polygonCoords = layer.getLatLngs()[0].map(coord => [coord.lat, coord.lng]);\n      onAreaSelection({\n        type: 'polygon',\n        data: polygonCoords\n      });\n    }\n  };\n\n  // Render selected area if it exists\n  const renderSelectedArea = () => {\n    if (!selectedArea) return null;\n    if (selectedArea.type === 'polygon') {\n      return /*#__PURE__*/_jsxDEV(Polygon, {\n        positions: selectedArea.data,\n        pathOptions: {\n          color: 'green',\n          fillColor: 'green',\n          fillOpacity: 0.2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Other area types (point, etc.) would be handled here\n    return null;\n  };\n\n  // Render vector layers based on visibility settings\n  const renderVectorLayers = () => {\n    if (!vectorData) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [layerVisibility.soil && vectorData.soil && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: vectorData.soil,\n        style: () => ({\n          color: '#8B4513',\n          weight: 2,\n          opacity: 0.7\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), layerVisibility.rainfall && vectorData.rainfall && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: vectorData.rainfall,\n        style: () => ({\n          color: '#0000FF',\n          weight: 2,\n          opacity: 0.7\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n\n  // Render raster overlay if visible\n  const renderRasterOverlay = () => {\n    if (!layerVisibility.ndvi || !rasterData || !rasterData.ndviUrl) return null;\n    return /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: rasterData.ndviUrl,\n      opacity: 0.7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n        ref: featureGroupRef,\n        children: /*#__PURE__*/_jsxDEV(EditControl, {\n          position: \"topright\",\n          onCreated: handleCreated,\n          draw: {\n            rectangle: false,\n            circle: false,\n            circlemarker: false,\n            marker: true,\n            polyline: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), renderSelectedArea(), renderVectorLayers(), renderRasterOverlay()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"/aHZSTYaiHpG6C6V1t7GpBVakvE=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useRef","MapContainer","TileLayer","FeatureGroup","Polygon","GeoJSON","EditControl","jsxDEV","_jsxDEV","Fragment","_Fragment","MapComponent","center","zoom","selectedArea","layerVisibility","vectorData","rasterData","onAreaSelection","_s","featureGroupRef","handleCreated","e","layerType","layer","polygonCoords","getLatLngs","map","coord","lat","lng","type","data","renderSelectedArea","positions","pathOptions","color","fillColor","fillOpacity","fileName","_jsxFileName","lineNumber","columnNumber","renderVectorLayers","children","soil","style","weight","opacity","rainfall","renderRasterOverlay","ndvi","ndviUrl","url","className","height","width","attribution","ref","position","onCreated","draw","rectangle","circle","circlemarker","marker","polyline","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/components/MapComponent.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup, Polygon, GeoJSON } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport { LatLngTuple, LatLngExpression } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport { SelectedArea, LayerVisibility } from '../App';\n\ninterface MapComponentProps {\n  center: LatLngTuple;\n  zoom: number;\n  selectedArea: SelectedArea | null;\n  layerVisibility: LayerVisibility;\n  vectorData: any;\n  rasterData: any;\n  onAreaSelection: (area: SelectedArea) => void;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({\n  center,\n  zoom,\n  selectedArea,\n  layerVisibility,\n  vectorData,\n  rasterData,\n  onAreaSelection\n}) => {\n  const featureGroupRef = useRef<any>(null);\n\n  // Handle polygon creation\n  const handleCreated = (e: any) => {\n    const { layerType, layer } = e;\n    \n    if (layerType === 'polygon') {\n      const polygonCoords = layer.getLatLngs()[0].map((coord: any) => [\n        coord.lat,\n        coord.lng\n      ]);\n      \n      onAreaSelection({\n        type: 'polygon',\n        data: polygonCoords\n      });\n    }\n  };\n\n  // Render selected area if it exists\n  const renderSelectedArea = () => {\n    if (!selectedArea) return null;\n\n    if (selectedArea.type === 'polygon') {\n      return (\n        <Polygon \n          positions={selectedArea.data as LatLngExpression[]}\n          pathOptions={{ color: 'green', fillColor: 'green', fillOpacity: 0.2 }}\n        />\n      );\n    }\n    \n    // Other area types (point, etc.) would be handled here\n    return null;\n  };\n\n  // Render vector layers based on visibility settings\n  const renderVectorLayers = () => {\n    if (!vectorData) return null;\n\n    return (\n      <>\n        {layerVisibility.soil && vectorData.soil && (\n          <GeoJSON \n            data={vectorData.soil}\n            style={() => ({ color: '#8B4513', weight: 2, opacity: 0.7 })}\n          />\n        )}\n        {layerVisibility.rainfall && vectorData.rainfall && (\n          <GeoJSON \n            data={vectorData.rainfall}\n            style={() => ({ color: '#0000FF', weight: 2, opacity: 0.7 })}\n          />\n        )}\n      </>\n    );\n  };\n\n  // Render raster overlay if visible\n  const renderRasterOverlay = () => {\n    if (!layerVisibility.ndvi || !rasterData || !rasterData.ndviUrl) return null;\n\n    return (\n      <TileLayer\n        url={rasterData.ndviUrl}\n        opacity={0.7}\n      />\n    );\n  };\n\n  return (\n    <div className=\"map-container\">\n      <MapContainer \n        center={center} \n        zoom={zoom} \n        style={{ height: '100%', width: '100%' }}\n      >\n        {/* Base map layer */}\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Drawing tools */}\n        <FeatureGroup ref={featureGroupRef}>\n          <EditControl\n            position=\"topright\"\n            onCreated={handleCreated}\n            draw={{\n              rectangle: false,\n              circle: false,\n              circlemarker: false,\n              marker: true,\n              polyline: false\n            }}\n          />\n        </FeatureGroup>\n\n        {/* Selected area */}\n        {renderSelectedArea()}\n\n        {/* Vector layers */}\n        {renderVectorLayers()}\n\n        {/* Raster overlay */}\n        {renderRasterOverlay()}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}