{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DownloadPanel=_ref=>{let{selectedArea,vectorData,rasterData}=_ref;if(!selectedArea)return null;const handleDownload=format=>{// In a real app, this would call the backend API to generate and download the file\nconsole.log(\"Downloading data in \".concat(format,\" format\"));alert(\"In a real app, this would download the data in \".concat(format,\" format\"));};return/*#__PURE__*/_jsxs(\"div\",{className:\"download-panel\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Download Data\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"download-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"download-button\",onClick:()=>handleDownload('CSV'),children:\"CSV\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-button\",onClick:()=>handleDownload('GeoJSON'),children:\"GeoJSON\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-button\",onClick:()=>handleDownload('GeoTIFF'),children:\"GeoTIFF\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-button\",onClick:()=>handleDownload('PDF'),children:\"PDF Report\"})]})]});};export default DownloadPanel;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","DownloadPanel","_ref","selectedArea","vectorData","rasterData","handleDownload","format","console","log","concat","alert","className","children","onClick"],"sources":["C:/Users/ADMIN/Desktop/agro/frontend/src/components/DownloadPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { SelectedArea } from '../App';\n\ninterface DownloadPanelProps {\n  selectedArea: SelectedArea | null;\n  vectorData: any;\n  rasterData: any;\n}\n\nconst DownloadPanel: React.FC<DownloadPanelProps> = ({ selectedArea, vectorData, rasterData }) => {\n  if (!selectedArea) return null;\n  \n  const handleDownload = (format: string) => {\n    // In a real app, this would call the backend API to generate and download the file\n    console.log(`Downloading data in ${format} format`);\n    alert(`In a real app, this would download the data in ${format} format`);\n  };\n  \n  return (\n    <div className=\"download-panel\">\n      <h3>Download Data</h3>\n      <div className=\"download-buttons\">\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('CSV')}\n        >\n          CSV\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('GeoJSON')}\n        >\n          GeoJSON\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('GeoTIFF')}\n        >\n          GeoTIFF\n        </button>\n        <button \n          className=\"download-button\"\n          onClick={() => handleDownload('PDF')}\n        >\n          PDF Report\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DownloadPanel;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1B,KAAM,CAAAC,aAA2C,CAAGC,IAAA,EAA8C,IAA7C,CAAEC,YAAY,CAAEC,UAAU,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC3F,GAAI,CAACC,YAAY,CAAE,MAAO,KAAI,CAE9B,KAAM,CAAAG,cAAc,CAAIC,MAAc,EAAK,CACzC;AACAC,OAAO,CAACC,GAAG,wBAAAC,MAAA,CAAwBH,MAAM,WAAS,CAAC,CACnDI,KAAK,mDAAAD,MAAA,CAAmDH,MAAM,WAAS,CAAC,CAC1E,CAAC,CAED,mBACEP,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bf,IAAA,OAAAe,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBb,KAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bf,IAAA,WACEc,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMR,cAAc,CAAC,KAAK,CAAE,CAAAO,QAAA,CACtC,KAED,CAAQ,CAAC,cACTf,IAAA,WACEc,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMR,cAAc,CAAC,SAAS,CAAE,CAAAO,QAAA,CAC1C,SAED,CAAQ,CAAC,cACTf,IAAA,WACEc,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMR,cAAc,CAAC,SAAS,CAAE,CAAAO,QAAA,CAC1C,SAED,CAAQ,CAAC,cACTf,IAAA,WACEc,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMR,cAAc,CAAC,KAAK,CAAE,CAAAO,QAAA,CACtC,YAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}